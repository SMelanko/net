language: cpp

dist: bionic
sudo: required

matrix:
  include:

    ###########################################################################
    # Clang on macOS
    #

    - os: osx
      env:
        - CXX_COMPILER=clang++
        - BUILD_TYPE=Release
      osx_image: xcode11.3
      compiler: clang
      script:
        - cd "${TRAVIS_BUILD_DIR}"
        - sh cmakegen-xcode.sh
        - cd build
        - cmake --build . --config ${BUILD_TYPE}

    ###########################################################################
    # GCC on Linux
    #

    - os: linux
      env:
        - JOB="GCC 7 Release"
        - CC_COMPILER=gcc-7
        - CXX_COMPILER=g++-7
        - BUILD_TYPE=Release
      addons: &gcc7
        apt:
          packages:
            - gcc-7
            - g++-7
          sources:
            - ubuntu-toolchain-r-test
      script:
        - cd "${TRAVIS_BUILD_DIR}"
        - mkdir -p build && cd build
        - |
          conan install .. --build missing \
            -s build_type=${BUILD_TYPE} \
            -s compiler.libcxx=libstdc++11
        - cmake .. -DCMAKE_BUILD_TYPE:STRING=${BUILD_TYPE}
        - cmake --build . --config ${BUILD_TYPE} -- -j2

install:
  # Set the ${CXX} variable properly.
  - export CXX=${CXX_COMPILER}
  # Install a recent CMake (unless already installed on macOS) and Conan.
  - |
    if [ "${TRAVIS_OS_NAME}" == "linux" ]; then
      CMAKE_VERSION=3.16.0
      CMAKE_ARCH=cmake-${CMAKE_VERSION}-Linux-x86_64.tar.gz
      CMAKE_URL="https://cmake.org/files/v${CMAKE_VERSION%.[0-9]}/${CMAKE_ARCH}"
      mkdir cmake && travis_retry wget --no-check-certificate -O - ${CMAKE_URL} | tar --strip-components=1 -xz -C cmake
      export PATH=${DEPS_DIR}/cmake/bin:${PATH}
      sudo pip install conan
    else
      brew update
      brew install cmake || brew upgrade cmake
      brew install conan || brew upgrade conan
    fi